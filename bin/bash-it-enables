#!/usr/bin/env bash
# shellcheck disable=SC1090,SC2155
set -o errexit
set -o errtrace
set -o nounset
set -o pipefail
[[ -n "${XTRACE:+x}" ]] && set -o xtrace
[[ -n "${DEBUG:-}" ]] && IS_DEBUG=true || IS_DEBUG=false

bash-it-enables() {
  echo "## [aliases]"
  printf "bash-it enable alias "
  (for i in $BASH_IT/aliases/enabled/*.bash; do echo "$i" | awk -F"/" '{print $NF}' | sed 's/.aliases.bash//'; done) | tr '\n' ' '
  echo ""
  echo "## [plugins]"
  printf "bash-it enable plugin "
  (for i in $BASH_IT/plugins/enabled/*.bash; do echo "$i" | awk -F"/" '{print $NF}' | sed 's/.plugin.bash//'; done) | tr '\n' ' '
  echo ""
  echo "## [completions]"
  printf "bash-it enable completion "
  (for i in $BASH_IT/completion/enabled/*.bash; do echo "$i" | awk -F"/" '{print $NF}' | sed 's/.completion.bash//'; done) | tr '\n' ' '
  echo ""
}

build-bash-it-enables-script() {
  local target=$1
  cat <<EOF > $target
#!/usr/bin/env sh
set -o errexit

bash-it disable alias all
bash-it disable plugin all
bash-it disable completion all

EOF
  bash-it-enables >> $target
}


usage() {
cat <<EOF
Usage: $0 [Options]

Options:
    -h --help               Show help
    -e                      To export bash code
EOF
}

main() {
  local arg=${1:-}
  if [[ $arg == -h ]] || [[ $arg == --help ]]; then
    usage
    exit 0
  fi

  if [[ $arg == -e ]]; then
    build-bash-it-enables-script ~/.bash_it/custom/reset.sh
  else
    bash-it-enables
  fi
}

main "$@"
